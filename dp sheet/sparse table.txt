#include<bits/stdc++.h>
using namespace std;
#define ll long long
const ll N=1e5+1;
vector<ll>v(N);

const ll maxx = 20;
ll st[N][maxx];
ll mt[N][maxx];
ll n;

void sparse_table1()
{
    for (ll i = 0; i < n; i++)
    st[i][0] = v[i];

    for (ll j = 1; j <= maxx; j++)
        for (ll i = 0; i + (1 << j) <= n; i++)
            st[i][j] = min(st[i][j-1], st[i + (1 << (j - 1))][j - 1]);
}
void sparse_table2()
{
    for (ll i = 0; i < n; i++)
    mt[i][0] = v[i];

    for (ll j = 1; j <= maxx; j++)
        for (ll i = 0; i + (1 << j) <= n; i++)
            mt[i][j] = max(mt[i][j-1], mt[i + (1 << (j - 1))][j - 1]);
}

int main()
{
    cin>>n;
    for(ll i=0;i<n;i++)
    {
        cin>>v[i];
    }
    sparse_table1();
    sparse_table2();
    ll q;  cin>>q;

    while(q--)
    {
        ll l,r;  cin>>l>>r;
        ll z=log2(r-l+1);

        ll ans = min(st[l][z], st[r - (1 << z) + 1][z]);
        ll res = max(mt[l][z], mt[r - (1 << z) + 1][z]);

        ll x =log2(l);
        ll maxt = max(mt[0][x], mt[l - (1 << x) ][x]);

        ll y=log2(n-r-1);
        ll mint=max(mt[r+1][y], mt[n - (1 << y) ][y]);
        
        double sol=max(mint,maxt);
        double flag = (double)(res-ans)/2;
        //cout<<flag<<endl;
        
        double mar = ans + max(flag,sol);
        cout<<mar<<endl;

        cout<<ans<<" "<<res<<" "<<maxt<<" "<<mint<<endl;


    }
}